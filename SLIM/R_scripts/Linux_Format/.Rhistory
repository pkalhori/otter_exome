h= c(1,2,3,4)
s= c(1,2,3,4)
0.5 * exp(-13*abs(s))
exp
exp(1)
require(ggplot2)
todaysdate=format(Sys.Date(),format="%Y%m%d")
data.dir="C:\\Users\\poone\\OneDrive\\Documents\\Otter_Exome_Project\\SLIM_results\\"
popModDate=c("CA\\1D.3Epoch.LongerRecovery\\20210126\\")
data.dir="C:\\Users\\poone\\OneDrive\\Documents\\Otter_Exome_Project\\SLIM_results\\"
popModDate=c("CA\\1D.3Epoch.LongerRecovery\\20210126\\")
popModDate2=c("CA\\1D.3Epoch.LongerRecovery\\20210123\\")
allLoads_Henn <- read.table(paste(data.dir,popModDate2,"20210123_CA_Henn_LoadPerGeneration.ThroughTime.AllReps.RemovedBurninFixedVar.txt",sep = ""), header = T)
allLoads_Henn$htype <- "Henn_hs"
allLoads_DengLynch <- read.table(paste(data.dir,popModDate,"20210126_DengLynch_LoadPerGeneration.ThroughTime.AllReps.RemovedBurninFixedVar.txt",sep = ""), header = T)
allLoads_DengLynch$htype <- "DengLynch_hs"
allLoads<- rbind.data.frame(allLoads_Henn,allLoads_DengLynch)
library(tidyverse)
allLoads_means_se <- allLoads %>%
group_by(generation,htype) %>% # Group the data by manufacturer
summarize(mean_load=mean(L), # Create variable with mean of cty per group
sd_load=sd(L), # Create variable with sd of cty per group
N_load=n(), # Create new variable N of cty per group
se=sd_load/sqrt(N_load), # Create variable with se of cty per group
upper_limit=mean_load+sd_load, # Upper limit
lower_limit=mean_load-sd_load # Lower limit
)
p2 <-
ggplot(allLoads_means_se,aes(x=generation,y=mean_load,color=htype))+
geom_line(position=position_dodge(.5),size = 1,alpha=0.5)+
#stat_summary(fun.y = "mean", geom = "point", size = 1, color=model)+
#stat_summary(fun.y = "mean", geom = "line", size = 0.5)+
theme_bw()+
ylab("Genetic Load")+
xlab("Generation") +
theme(legend.position = "left")+
ggtitle("Genetic Load for AK 5Epoch")+
#facet_grid(hLabel~population,scales="free")+
#stat_summary(fun.data = allLoads_means_se, geom = "errorbar")+
geom_errorbar(data=allLoads_means_se, mapping=aes(ymin=lower_limit,ymax=upper_limit),color="green",size=0.1)+
geom_vline(xintercept=36)
p2
p2 <-
ggplot(allLoads_means_se,aes(x=generation,y=mean_load,color=htype))+
geom_line(position=position_dodge(.5),size = 1,alpha=0.5)+
#stat_summary(fun.y = "mean", geom = "point", size = 1, color=model)+
#stat_summary(fun.y = "mean", geom = "line", size = 0.5)+
theme_bw()+
ylab("Genetic Load")+
xlab("Generation") +
theme(legend.position = "left")+
ggtitle("Genetic Load for AK 5Epoch")+
#facet_grid(hLabel~population,scales="free")+
#stat_summary(fun.data = allLoads_means_se, geom = "errorbar")+
geom_errorbar(data=allLoads_means_se, mapping=aes(ymin=lower_limit,ymax=upper_limit),color=htype,size=0.1)+
geom_vline(xintercept=36)
p2 <-
ggplot(allLoads_means_se,aes(x=generation,y=mean_load,color=htype))+
geom_line(position=position_dodge(.5),size = 1,alpha=0.5)+
#stat_summary(fun.y = "mean", geom = "point", size = 1, color=model)+
#stat_summary(fun.y = "mean", geom = "line", size = 0.5)+
theme_bw()+
ylab("Genetic Load")+
xlab("Generation") +
theme(legend.position = "left")+
ggtitle("Genetic Load for AK 5Epoch")+
#facet_grid(hLabel~population,scales="free")+
#stat_summary(fun.data = allLoads_means_se, geom = "errorbar")+
geom_errorbar(data=allLoads_means_se, mapping=aes(ymin=lower_limit,ymax=upper_limit),size=0.1)+
geom_vline(xintercept=36)
p2
